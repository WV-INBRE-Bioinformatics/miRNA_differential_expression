#! /bin/bash

## Requires WV-INBRE-Bioinformatics github repositories

## Starting from fastq files generated by demultiplexing, creates and processes bam file
## Processing results in sorted, indexed bam files with duplicate reads marked

## Uses samtools version 1.3.1
## Uses FastQC version 0.11.3
## Uses HISAT2 version 2.0.4
## Uses Oracle JDK version 1.8.0_111
## Uses Picard tools version 2.10.3
## Uses Trimmomatic version 0.36

##
## ===================
## Functions
## ===================
##


function log {
  if [ "$?" == "0" ]; then 
    echo "$(date): $1"
  else 
    echo "$(date): $2"
    if [ "$3" != "" ]; then
      exit $3
    fi
  fi
}

##
## ==================
## Environment variables 
## required by repository 
## scripts
## ==================
##

export SAMTOOLS=/opt/samtools-1.3.1/bin/samtools
export FASTQC=/opt/FastQC/fastqc
export HISAT=/opt/hisat2-2.0.4/hisat2
export JAVA_HOME=/opt/jdk1.8.0_111
export PICARD=/opt/picard-2.10.3.jar
export TRIMMOMATIC=/opt/Trimmomatic-0.36/trimmomatic-0.36.jar

##
## =================
## Local files and 
## directories
## =================
##

raw_fastqs=./raw_fastqs
fastqcs=./fastqcs
adapter_file="/opt/Trimmomatic-0.36/adapters/TruSeq3-PE-2.fa"
trimmed_dir=trimmed
unpaired_trim_dir=unpaired_from_trimming
trimmed_fastqc_dir=${trimmed_dir}/fastqcs
aligned_dir=./aligned
genome=/seqdata/Genomes/HISAT_indexes/grcm38/genome
sort_dir=./sorted
dups_marked_dir=./dups_marked

##
## =================
## Pipeline
## =================
##

## download scripts from repo:
log "Downloading scripts"

repo="https://github.com/WV-INBRE-Bioinformatics"
fastq_utils_repo="${repo}/fastq-utils"
fastq_utils_version="4ab67e74c0ef97ab929fa5358e809b63c165faba"

mRNA_repo="${repo}/mRNA"
mRNA_version="f654a5d969d7f2ce8c376e966774f46b79ee08f4"

fastq_utils_script_dir="fastq-utils-${fastq_utils_version}"
mRNA_script_dir="mRNA-${mRNA_version}"

wget -O fastq-utils-scripts.zip ${fastq_utils_repo}/archive/${fastq_utils_version}.zip
log "fastq-utils Scripts downloaded" "Failed to retrieve fastq-utils scripts" 1


wget -O mRNA-scripts.zip ${mRNA_repo}/archive/${mRNA_version}.zip
log "mRNA scripts downloaded" "Failed to retrieve mRNA scripts" 1

log "Unzipping scripts"
unzip fastq-utils-scripts.zip
log "fastq-utils scripts unzipped" "Failed to unzip fastq-utils scripts" 1


unzip mRNA-scripts.zip
log "mRNA scripts unzipped" "Failed to unzip mRNA scripts" 1

log "Making scripts executable"
chmod +x ${fastq_utils_script_dir}/*.sh
log "fastq-utils scripts are exectuable" "Could not make fastq-utils scripts executable" 1

chmod +x ${mRNA_script_dir}/*.sh
chmod +x ${mRNA_script_dir}/*.Rscript
log "mRNA scripts are exectuable" "Could not make mRNA scripts executable" 1


log "Generating fastqcs quality control files in ${fastqcs}"

${fastq_utils_script_dir}/generate_qcs.sh -t 30 ${raw_fastqs} ${fastqcs}

log "Fastqc files generated" "Fastqc failed: see error log. Continuing with trimming"

log "Trimming fastq files"
${fastq_utils_script_dir}/trim.sh -a ${adapter_file} -t ${TRIMMOMATIC} -j ${JAVA_HOME} -x 30 ${raw_fastqs} ${trimmed_dir} ${unpaired_trim_dir}

log "Generating post-trimming fastqcs"
${fastq_utils_script_dir}/generate_qcs.sh -t 30 ${trimmed_dir} ${trimmed_fastqc_dir}
log "Fastqc files generated for trimmed data" "Fastqc failed for trimmed data: see error log. Continuing with alignement"


log "Aligning to ${genome} using HISAT2 to ${aligned_dir}"

${mRNA_script_dir}/align_mRNA.sh ${trimmed_dir} ${genome} ${aligned_dir} 

log "Alignment complete" "Alignment failed: see error log" 1

log "Sorting and indexing bam files to ${sort_dir}"

${fastq_utils_script_dir}/sort_and_index_bams.sh ${aligned_dir} ${sort_dir}

log "Sorting complete" "Sorting failed: see error log" 1

log "Marking duplicates and making new bam files in ${dups_marked_dir}"

${fastq_utils_script_dir}/mark_duplicates.sh ${sort_dir} ${dups_marked_dir}

log "Marking duplicates complete" "Marking duplicates failed: see error log" 1

log "Running differential expression R script"

${mRNA_script_dir}/run_de.Rscript -b ${dups_marked_dir} -g /seqdata/Genomes/Mus_musculus/Mus_musculus.GRCm38.81.gtf  -O analysis-$(date +%Y-%m-%d).RData -m "~treatment" -a treatment -a replicate -o Mm -c sampleCluster.png  -n 250 -h heatmap.png -H 1920 -v significant_Fat_DMEM.csv --contrast treatment --numerator Fat_fat --denominator DMEM -v significant_Lean_DMEM.csv --contrast treatment --numerator Lean_fat --denominator DMEM -v significant_Fat_Lean.csv --contrast treatment --numerator Fat_fat --denominator Lean_fat  > de.log 2>&1

log "Differential Expression complete" "Differential Expression failed" 1

log "Pipeline complete"
exit 0
